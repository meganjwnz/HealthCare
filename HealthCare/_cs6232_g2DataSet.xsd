<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="_cs6232_g2DataSet" targetNamespace="http://tempuri.org/_cs6232_g2DataSet.xsd" xmlns:mstns="http://tempuri.org/_cs6232_g2DataSet.xsd" xmlns="http://tempuri.org/_cs6232_g2DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="cs6232_g2ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="cs6232_g2ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.HealthCare.Properties.Settings.GlobalReference.Default.cs6232_g2ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MostPerformedTestDuringDatesTableAdapter" GeneratorDataComponentClassName="MostPerformedTestDuringDatesTableAdapter" Name="MostPerformedTestDuringDates" UserDataComponentName="MostPerformedTestDuringDatesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="cs6232_g2ConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT dbo.testResult.testCode, dbo.test.testName, COUNT(dbo.testResult.testCode) AS SumOfTests, 
ROUND((SUM(CASE WHEN dbo.testResult.testCode IS NOT NULL THEN 1 ELSE 0 END)/(SUM(CASE WHEN dbo.testResult.testCode IS NOT NULL THEN 1 ELSE 0 END)) * 100),2) AS PercentagePerformed,
SUM(CASE dbo.testResult.results WHEN 'normal' THEN 1 ELSE 0 END) AS Normal_Results,
SUM(CASE dbo.testResult.results WHEN 'abnormal' THEN 1 ELSE 0 END) AS Abnormal_Results,
ROUND((SUM(CASE WHEN DATEDIFF(year, dbo.person.dateOfBirth, dbo.testResult.testDate) BETWEEN 18 AND 29 THEN 1 ELSE 0 END))/SUM(CASE WHEN dbo.testResult.testCode IS NOT NULL THEN 1 ELSE 0 END) * 100,2) AS '18-29',
ROUND((SUM(CASE WHEN DATEDIFF(year, dbo.person.dateOfBirth, dbo.testResult.testDate) BETWEEN 30 AND 39 THEN 1 ELSE 0 END))/SUM(CASE WHEN dbo.testResult.testCode IS NOT NULL THEN 1 ELSE 0 END) * 100,2) AS '30-39',
ROUND((SUM(CASE WHEN DATEDIFF(year, dbo.person.dateOfBirth, dbo.testResult.testDate) &gt; 40 THEN 1 ELSE 0 END))/SUM(CASE WHEN dbo.testResult.testCode IS NOT NULL THEN 1 ELSE 0 END) * 100,2) AS 'All other age groups'
FROM dbo.person
JOIN dbo.patient
ON dbo.patient.personID = dbo.person.personID
JOIN appointment
ON dbo.appointment.patientID = dbo.patient.patientID
JOIN dbo.visit 
ON dbo.visit.appointmentID =dbo.appointment.appointmentID
JOIN dbo.testResult
ON dbo.testResult.visitID = dbo.visit.visitID
JOIN dbo.test
ON dbo.test.testCode = dbo.testResult.testCode
GROUP BY dbo.testResult.testCode, dbo.test.testName
ORDER BY SumOfTests DESC, DBO.test.testName DESC;</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="testCode" DataSetColumn="testCode" />
              <Mapping SourceColumn="testName" DataSetColumn="testName" />
              <Mapping SourceColumn="SumOfTests" DataSetColumn="SumOfTests" />
              <Mapping SourceColumn="PercentagePerformed" DataSetColumn="PercentagePerformed" />
              <Mapping SourceColumn="Normal_Results" DataSetColumn="Normal_Results" />
              <Mapping SourceColumn="Abnormal_Results" DataSetColumn="Abnormal_Results" />
              <Mapping SourceColumn="18-29" DataSetColumn="eightteenToTwentyNine" />
              <Mapping SourceColumn="30-39" DataSetColumn="thirtyToThrityNine" />
              <Mapping SourceColumn="All other age groups" DataSetColumn="All_other_age_groups" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="_cs6232_g2DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="_cs6232_g2DataSet" msprop:Generator_UserDSName="_cs6232_g2DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="MostPerformedTestDuringDates" msprop:Generator_TableClassName="MostPerformedTestDuringDatesDataTable" msprop:Generator_TableVarName="tableMostPerformedTestDuringDates" msprop:Generator_TablePropName="MostPerformedTestDuringDates" msprop:Generator_RowDeletingName="MostPerformedTestDuringDatesRowDeleting" msprop:Generator_RowChangingName="MostPerformedTestDuringDatesRowChanging" msprop:Generator_RowEvHandlerName="MostPerformedTestDuringDatesRowChangeEventHandler" msprop:Generator_RowDeletedName="MostPerformedTestDuringDatesRowDeleted" msprop:Generator_UserTableName="MostPerformedTestDuringDates" msprop:Generator_RowChangedName="MostPerformedTestDuringDatesRowChanged" msprop:Generator_RowEvArgName="MostPerformedTestDuringDatesRowChangeEvent" msprop:Generator_RowClassName="MostPerformedTestDuringDatesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="testCode" msprop:Generator_ColumnVarNameInTable="columntestCode" msprop:Generator_ColumnPropNameInRow="testCode" msprop:Generator_ColumnPropNameInTable="testCodeColumn" msprop:Generator_UserColumnName="testCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="testName" msprop:Generator_ColumnVarNameInTable="columntestName" msprop:Generator_ColumnPropNameInRow="testName" msprop:Generator_ColumnPropNameInTable="testNameColumn" msprop:Generator_UserColumnName="testName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SumOfTests" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnSumOfTests" msprop:Generator_ColumnPropNameInRow="SumOfTests" msprop:Generator_ColumnPropNameInTable="SumOfTestsColumn" msprop:Generator_UserColumnName="SumOfTests" type="xs:int" minOccurs="0" />
              <xs:element name="PercentagePerformed" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnPercentagePerformed" msprop:Generator_ColumnPropNameInRow="PercentagePerformed" msprop:Generator_ColumnPropNameInTable="PercentagePerformedColumn" msprop:Generator_UserColumnName="PercentagePerformed" type="xs:int" minOccurs="0" />
              <xs:element name="Normal_Results" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnNormal_Results" msprop:Generator_ColumnPropNameInRow="Normal_Results" msprop:Generator_ColumnPropNameInTable="Normal_ResultsColumn" msprop:Generator_UserColumnName="Normal_Results" type="xs:int" minOccurs="0" />
              <xs:element name="Abnormal_Results" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnAbnormal_Results" msprop:Generator_ColumnPropNameInRow="Abnormal_Results" msprop:Generator_ColumnPropNameInTable="Abnormal_ResultsColumn" msprop:Generator_UserColumnName="Abnormal_Results" type="xs:int" minOccurs="0" />
              <xs:element name="eightteenToTwentyNine" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columneightteenToTwentyNine" msprop:Generator_ColumnPropNameInRow="eightteenToTwentyNine" msprop:Generator_ColumnPropNameInTable="eightteenToTwentyNineColumn" msprop:Generator_UserColumnName="eightteenToTwentyNine" type="xs:int" minOccurs="0" />
              <xs:element name="thirtyToThrityNine" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnthirtyToThrityNine" msprop:Generator_ColumnPropNameInRow="thirtyToThrityNine" msprop:Generator_ColumnPropNameInTable="thirtyToThrityNineColumn" msprop:Generator_UserColumnName="thirtyToThrityNine" type="xs:int" minOccurs="0" />
              <xs:element name="All_other_age_groups" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnAll_other_age_groups" msprop:Generator_ColumnPropNameInRow="All_other_age_groups" msprop:Generator_ColumnPropNameInTable="All_other_age_groupsColumn" msprop:Generator_UserColumnName="All_other_age_groups" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>